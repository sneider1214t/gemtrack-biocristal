import request from 'supertest';
import app from '../../index.js'; 

describe('üìç API /api/ubicacion - Biocristal', () => {
  const ubicacionNueva = {
    nombre_ubicacion: 'BodegaTest',
    estado_ubicacion: 'Ocupada' // texto permitido
  };

  const ubicacionActualizada = {
    estado_ubicacion: 'Con espacio' // Texto permitido
  };

  // üì¶ Crear ubicaci√≥n
  it('üì¶ Crear ubicaci√≥n', async () => {
    const res = await request(app)
      .post('/api/ubicacion')
      .send(ubicacionNueva)
      .expect(201);

    console.log('‚úÖ Ubicaci√≥n creada:', res.body);
    expect(res.body.nombre_ubicacion).toBe(ubicacionNueva.nombre_ubicacion);
    expect(res.body.estado_ubicacion).toBe('Ocupada');
  });

  // üìã Obtener todas las ubicaciones
  it('üìã Obtener todas las ubicaciones', async () => {
    const res = await request(app)
      .get('/api/ubicacion')
      .expect(200);

    console.log('üìö Todas las ubicaciones:', res.body);
    expect(Array.isArray(res.body)).toBe(true);
    expect(res.body.some(u => u.estado_ubicacion === 'Ocupada' || u.estado_ubicacion === 'Con espacio')).toBe(true);
  });

  // üîç Obtener ubicaci√≥n por nombre
  it('üîç Obtener ubicaci√≥n por nombre', async () => {
    const res = await request(app)
      .get(`/api/ubicacion/${ubicacionNueva.nombre_ubicacion}`)
      .expect(200);

    console.log('üîé Ubicaci√≥n encontrada:', res.body);
    expect(res.body.nombre_ubicacion).toBe(ubicacionNueva.nombre_ubicacion);
    expect(res.body.estado_ubicacion).toBe('Ocupada');
  });

  // ‚úèÔ∏è Actualizar ubicaci√≥n
  it('‚úèÔ∏è Actualizar ubicaci√≥n', async () => {
    const res = await request(app)
      .put(`/api/ubicacion/${ubicacionNueva.nombre_ubicacion}`)
      .send(ubicacionActualizada)
      .expect(200);

    console.log('üõ†Ô∏è Ubicaci√≥n actualizada:', res.body);
    expect(res.body.message).toBe('Ubicaci√≥n actualizada correctamente');
  });

  // üîÅ Confirmar actualizaci√≥n
  it('üîÅ Confirmar ubicaci√≥n actualizada', async () => {
    const res = await request(app)
      .get(`/api/ubicacion/${ubicacionNueva.nombre_ubicacion}`)
      .expect(200);

    console.log('üìå Ubicaci√≥n actualizada:', res.body);
    expect(res.body.estado_ubicacion).toBe('Con espacio');
  });

  // üóëÔ∏è Eliminar ubicaci√≥n
  it('üóëÔ∏è Eliminar ubicaci√≥n', async () => {
    const res = await request(app)
      .delete(`/api/ubicacion/${ubicacionNueva.nombre_ubicacion}`)
      .expect(200);

    console.log('üßπ Ubicaci√≥n eliminada:', res.body);
    expect(res.body.message).toBe('Ubicaci√≥n eliminada correctamente');
  });

  // ‚ùå Confirmar eliminaci√≥n
  it('‚ùå Confirmar ubicaci√≥n eliminada', async () => {
    await request(app)
      .get(`/api/ubicacion/${ubicacionNueva.nombre_ubicacion}`)
      .expect(404);

    console.log(`‚ùå Confirmado: ubicaci√≥n ${ubicacionNueva.nombre_ubicacion} fue eliminada`);
  });
});
